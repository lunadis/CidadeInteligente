<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gYAAPgABwAA4P/+A/8=
</value>
  </data>
</root>